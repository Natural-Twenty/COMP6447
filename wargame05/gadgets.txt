


Gadgets
=======


0x0804911a: adc al, 0x68; sub al, al; add al, 8; call eax; 
0x08049166: adc byte ptr [eax + 0x68], dl; sub al, al; add al, 8; call edx; 
0x08049124: adc cl, cl; ret; 
0x080490c3: adc dl, 0xff; call dword ptr [eax + 0x51]; 
0x08049274: add al, 0xb8; add byte ptr [eax], al; add byte ptr [eax], al; leave; ret; 
0x0804919c: add al, 8; add ecx, ecx; ret; 
0x0804926b: add al, 8; call 0x1070; add esp, 4; mov eax, 0; leave; ret; 
0x0804911e: add al, 8; call eax; 
0x0804911e: add al, 8; call eax; add esp, 0x10; leave; ret; 
0x0804916b: add al, 8; call edx; 
0x0804916b: add al, 8; call edx; add esp, 0x10; leave; ret; 
0x080490ce: add al, 8; push eax; call 0x1090; hlt; mov ebx, dword ptr [esp]; ret; 
0x080492e8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x08049276: add byte ptr [eax], al; add byte ptr [eax], al; leave; ret; 
0x0804912a: add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x080491a4: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x080490b1: add byte ptr [eax], al; add byte ptr [ecx + 0x2f4cc3], al; add byte ptr [ebp - 0x2d0f7d], cl; call dword ptr [eax - 0x73]; 
0x0804912b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; ret; 
0x08049277: add byte ptr [eax], al; add cl, cl; ret; 
0x0804900b: add byte ptr [eax], al; add ebx, 0x2ff3; mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101f; call eax; 
0x0804930d: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x080492ea: add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x08049011: add byte ptr [eax], al; mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101f; call eax; 
0x08049278: add byte ptr [eax], al; leave; ret; 
0x0804912c: add byte ptr [eax], al; nop; ret; 
0x080491a6: add byte ptr [eax], al; ret; 
0x080490b9: add byte ptr [ebp - 0x2d0f7d], cl; call dword ptr [eax - 0x73]; 
0x080490b3: add byte ptr [ecx + 0x2f4cc3], al; add byte ptr [ebp - 0x2d0f7d], cl; call dword ptr [eax - 0x73]; 
0x0804912d: add byte ptr [esi - 0x70], ah; ret; 
0x080492e7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x08049129: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; ret; 
0x080491a3: add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x08049279: add cl, cl; ret; 
0x08049199: add eax, 0x804c048; add ecx, ecx; ret; 
0x0804900d: add ebx, 0x2ff3; mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101f; call eax; 
0x0804919e: add ecx, ecx; ret; 
0x080491c7: add edx, 1; ret; 
0x08049122: add esp, 0x10; leave; ret; 
0x080491fc: add esp, 0xc; mov ecx, esp; nop; leave; ret; 
0x080492dd: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08049272: add esp, 4; mov eax, 0; leave; ret; 
0x0804901f: add esp, 8; pop ebx; ret; 
0x080491f7: call 0x1060; add esp, 0xc; mov ecx, esp; nop; leave; ret; 
0x0804926d: call 0x1070; add esp, 4; mov eax, 0; leave; ret; 
0x080490d1: call 0x1090; hlt; mov ebx, dword ptr [esp]; ret; 
0x08049193: call 0x1100; mov byte ptr [0x804c048], 1; leave; ret; 
0x080490c6: call dword ptr [eax + 0x51]; 
0x080490bf: call dword ptr [eax - 0x73]; 
0x0804901d: call eax; 
0x08049120: call eax; add esp, 0x10; leave; ret; 
0x0804901d: call eax; add esp, 8; pop ebx; ret; 
0x0804916d: call edx; 
0x0804916d: call edx; add esp, 0x10; leave; ret; 
0x080492a0: dec dword ptr [ebp - 0xef63]; dec dword ptr [ebp - 0xf37b]; ljmp [ecx]; ret; 
0x080492a6: dec dword ptr [ebp - 0xf37b]; ljmp [ecx]; ret; 
0x0804919a: dec eax; rol byte ptr [eax + ecx], 1; leave; ret; 
0x08049119: in al, dx; adc al, 0x68; sub al, al; add al, 8; call eax; 
0x08049165: in al, dx; adc byte ptr [eax + 0x68], dl; sub al, al; add al, 8; call edx; 
0x08049191: in al, dx; or al, ch; push 0xc6ffffff; add eax, 0x804c048; add ecx, ecx; ret; 
0x08049117: in eax, 0x83; in al, dx; adc al, 0x68; sub al, al; add al, 8; call eax; 
0x08049163: in eax, 0x83; in al, dx; adc byte ptr [eax + 0x68], dl; sub al, al; add al, 8; call edx; 
0x08049271: inc dword ptr [ebx + 0xb804c4]; add byte ptr [eax], al; add cl, cl; ret; 
0x080491fb: inc dword ptr [ebx - 0x1e76f33c]; nop; leave; ret; 
0x080491d0: inc edx; ret; 
0x08049197: inc esi; add eax, 0x804c048; add ecx, ecx; ret; 
0x080491bd: int 0x80; 
0x080491bd: int 0x80; ret; 
0x0804901b: je 0x101f; call eax; 
0x0804901b: je 0x101f; call eax; add esp, 8; pop ebx; ret; 
0x080492dc: jecxz 0x1261; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080492e5: lea esi, [esi]; lea esi, [esi]; endbr32; ret; 
0x080492ec: lea esi, [esi]; endbr32; ret; 
0x08049127: lea esi, [esi]; nop; ret; 
0x08049174: lea esi, [esi]; ret; 
0x08049273: les eax, ptr [eax + edi*4]; add byte ptr [eax], al; add byte ptr [eax], al; leave; ret; 
0x08049020: les ecx, ptr [eax]; pop ebx; ret; 
0x080492de: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080491fd: les ecx, ptr [ecx + ecx*4]; loope 0x1192; leave; ret; 
0x08049123: les edx, ptr [eax]; leave; ret; 
0x080492ac: ljmp [ecx]; ret; 
0x08049200: loope 0x1192; leave; ret; 
0x080492e6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x08049128: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x080491a2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x08049198: mov byte ptr [0x804c048], 1; leave; ret; 
0x08049275: mov eax, 0; leave; ret; 
0x08049013: mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101f; call eax; 
0x080491c4: mov eax, ecx; ret; 
0x080491cb: mov eax, edx; mov ebx, edx; ret; 
0x080492f5: mov ebp, dword ptr [esp]; ret; 
0x08049162: mov ebp, esp; sub esp, 0x10; push eax; push 0x804c028; call edx; 
0x08049116: mov ebp, esp; sub esp, 0x14; push 0x804c028; call eax; 
0x080491b7: mov ebp, esp; ret; 
0x080490d7: mov ebx, dword ptr [esp]; ret; 
0x080491cd: mov ebx, edx; ret; 
0x080491ff: mov ecx, esp; nop; leave; ret; 
0x080490d2: mov edx, 0xf4ffffff; mov ebx, dword ptr [esp]; ret; 
0x080492df: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x080491fe: or al, 0x89; loope 0x1192; leave; ret; 
0x08049192: or al, ch; push 0xc6ffffff; add eax, 0x804c048; add ecx, ecx; ret; 
0x080490cf: or byte ptr [eax - 0x18], dl; mov edx, 0xf4ffffff; mov ebx, dword ptr [esp]; ret; 
0x0804919d: or byte ptr [ecx], al; leave; ret; 
0x080491d3: pop ebp; ret; 
0x080492e0: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08049022: pop ebx; ret; 
0x080492e2: pop edi; pop ebp; ret; 
0x080492e1: pop esi; pop edi; pop ebp; ret; 
0x0804911b: push 0x804c028; call eax; 
0x0804911b: push 0x804c028; call eax; add esp, 0x10; leave; ret; 
0x08049168: push 0x804c028; call edx; 
0x08049168: push 0x804c028; call edx; add esp, 0x10; leave; ret; 
0x08049194: push 0xc6ffffff; add eax, 0x804c048; add ecx, ecx; ret; 
0x080490e2: push ds; sti; ret; 
0x080490d0: push eax; call 0x1090; hlt; mov ebx, dword ptr [esp]; ret; 
0x08049167: push eax; push 0x804c028; call edx; 
0x08049167: push eax; push 0x804c028; call edx; add esp, 0x10; leave; ret; 
0x08049161: push ebp; mov ebp, esp; sub esp, 0x10; push eax; push 0x804c028; call edx; 
0x08049115: push ebp; mov ebp, esp; sub esp, 0x14; push 0x804c028; call eax; 
0x080491b6: push ebp; mov ebp, esp; ret; 
0x080490d5: push esp; mov ebx, dword ptr [esp]; ret; 
0x080491c8: ret 0xc301; 
0x0804914b: ret 0xe8c1; 
0x080491bb: rol bl, cl; int 0x80; 
0x08049147: rol byte ptr [eax + ecx], 0x89; ret 0xe8c1; 
0x0804919b: rol byte ptr [eax + ecx], 1; leave; ret; 
0x0804901a: sal byte ptr [edx + eax - 1], 0xd0; add esp, 8; pop ebx; ret; 
0x080490c4: sar bh, cl; call dword ptr [eax + 0x51]; 
0x080490bd: sar bh, cl; call dword ptr [eax - 0x73]; 
0x080490d8: sbb al, 0x24; ret; 
0x080492f6: sub al, 0x24; ret; 
0x0804911c: sub al, al; add al, 8; call eax; 
0x0804911c: sub al, al; add al, 8; call eax; add esp, 0x10; leave; ret; 
0x08049169: sub al, al; add al, 8; call edx; 
0x08049169: sub al, al; add al, 8; call edx; add esp, 0x10; leave; ret; 
0x080491c0: sub ecx, 4; ret; 
0x08049164: sub esp, 0x10; push eax; push 0x804c028; call edx; 
0x08049118: sub esp, 0x14; push 0x804c028; call eax; 
0x08049190: sub esp, 8; call 0x1100; mov byte ptr [0x804c048], 1; leave; ret; 
0x08049019: test eax, eax; je 0x101f; call eax; 
0x08049019: test eax, eax; je 0x101f; call eax; add esp, 8; pop ebx; ret; 
0x080491ba: xor edx, edx; ret; 
0x08049010: das; add byte ptr [eax], al; mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101f; call eax; 
0x080490e0: endbr32; ret; 
0x080490d6: hlt; mov ebx, dword ptr [esp]; ret; 
0x08049125: leave; ret; 
0x080490ef: nop; mov ebx, dword ptr [esp]; ret; 
0x080491d2: nop; pop ebp; ret; 
0x080490df: nop; endbr32; ret; 
0x08049201: nop; leave; ret; 
0x080490ee: nop; nop; mov ebx, dword ptr [esp]; ret; 
0x080490de: nop; nop; endbr32; ret; 
0x080490ec: nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x080490dc: nop; nop; nop; endbr32; ret; 
0x080490ea: nop; nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x0804912f: nop; ret; 
0x0804900e: ret; 
0x080490e3: sti; ret; 

157 gadgets found
